@model IEnumerable<Product>


@inject Microsoft.AspNetCore.Mvc.Localization.IViewLocalizer localizer;


@{
    ViewData["Title"] = @localizer["Product"] ;
      Pager pager=new Pager();
    int pageNo = 0;

    if (ViewBag.pager != null)
    {
        pager = ViewBag.pager;
        pageNo = pager.CurrentPage;
    }
}

<style>
    .category{
        font-size:14px;
        margin-top:10px;
        margin-bottom:10px;
        box-shadow: 0.3px 0.3px 8px #888888;
    }
    .price{
        border:none;
        border-radius: 6px;
        display:block;
        width: 100%;
        padding:4px;
        margin-top:6px;
        text-transform:lowercase;
        font-weight:lighter;
        box-shadow: 0.3px 0.3px 8px #888888;
    }
    .check{
        margin-top:4px;
        padding:4px;

    }
   
    .submit{
        float:left;
        color:white;
        margin-left:8px;
        background-color:#FBB03B;
    }
    .submit:hover{
        background-color:burlywood;
    }
    .clear{
        float:right;
        color:white;
        margin-right:8px;
        background-color: steelblue;
    }
    .clear:hover{
        background-color: cadetblue;
    }
    .c1:hover{
        transform:none;
    }
    
</style>

<div class="row cont" 
    dir="@(System.Threading.Thread.CurrentThread.CurrentCulture.TextInfo.IsRightToLeft? "rtl" : "ltr")">
    <div class="col-sm-3 ">
        <div class="card c1">
            <div class="card-body type_card">
                <h2 class="card-title">Filter Product</h2>
                <form  asp-action="FilterProducts" asp-controller="Product">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <div class="form-group">
                        @*<label  class="control-label">Category :</label>*@
                        <select  name="CategoryId"  class="form-control category" asp-items="ViewBag.Category">
                            <option selected disabled>Choose Category</option>
                        </select>
                    </div>
                    
                    <div class="form-group mt-2">
                        @*<label  class="control-label">Filter by Price</label><br />*@
                        <input type="number" name="minPrice" step="5" placeholder="minimum price" class="form-control-sm col-5 price" />
                        <input type="number" name="maxPrice" step="1" placeholder="maximum price" class="form-control-sm col-5 price" />
                    </div>

                    <div class="form-group mt-2">
                        <label  class="control-label">Discount :</label>
                        <input type="checkbox" name="check" value="true" class="check"/>
                    </div>
                    <div class="form-group mt-4">
                        <input type="submit" value="Submit" class="btn submit float-right" />
                        <a class="btn clear"asp-action="Index">Defult</a>
                    </div>
                </form>
               
            </div>
        </div>
    </div>

    <div class="col-sm-9">
            <div class="row g-0" id="products">
                @foreach (var item in Model)
                {
                    <div class="col-md-4">
                        <div class="card card-border-none resp-wrap-align-center">

                            <a asp-action="Details" asp-route-id="@item.Id">
                                <img src="@item.Image" class="card-img-top img-fluid rounded" style="height:300px" />
                            </a>
                            @if (item.Discount != 0)
                            {
                                <a asp-action="Details" asp-route-id="@item.Id">
                                    <div class="card-img-overlay">
                                        <span class="mx-2 text-light p-1 bg-danger text-white">Discount</span>
                                    </div>
                                </a>
                            }

                            <div class="card-body">
                                <div class="overflow-hidden">
                                    <h5 class="card-title fs-6 d-inline-block text-truncate font-monospace text-start text-primary">
                                        @item.Name
                                    </h5>
                                </div>
                                <div class="styleprice">
                                    <p class="card-text text-muted" data-price="@item.Price">
                                        @item.Price.ToString("c", new System.Globalization.CultureInfo("en-US")) </p>
                                    @if (item.Discount != 0)
                                    {
                                        <p class="card-text text-danger text-decoration-line-through">
                                            @item.Old_Price.ToString("c", new System.Globalization.CultureInfo("en-US"))
                                        </p>
                                    }
                                    else
                                    {
                                        <p></p>
                                    }



                                </div>
                            </div>
                            @if (User.IsInRole("Admin"))
                            {
                                <div class="alert alert-dark  d-flex justify-content-between">
                                    <a asp-controller="Product" asp-action="Edit" asp-route-id="@item.Id" >
                                    <i class="bi bi-pencil-square text-primary btn-lg"></i> </a >

                                    <a asp-controller="Product" asp-action="Delete" asp-route-id="@item.Id">
                                        <i class="bi bi-calendar2-x text-danger btn-lg"></i>
                                    </a>
                                </div>
                            }
                            else
                            {
                                <div class="alert alert-dark stylealert">
                                    @if (User.Identity.IsAuthenticated)
                                    {
                                        <a   class="addItemInCard itemHover"  data-id="@item.Id" >
                                        <i class="fas fa-cart-plus" style="color:#f68b1e"></i> </a > 
                                        <a  class="itemHover" style="border: none; background-color: #d3d3d4">
                                            <i  onclick="AddItemINFavourit(@item.Id,this)" class="far fa-heart" style="color:#f68b1e" id="changeheart"></i> </a>
                                        
                                    }else{
                                         <a class="addItemInCard"  asp-action="Login" asp-controller="Account">
                                       <i class="fas fa-cart-plus" style="color:#f68b1e"></i> </a >
          
                                        <a class="addItemInCard"  asp-action="Login" asp-controller="Account"  style="border: none; background-color: #d3d3d4">
                                         <i class="far fa-heart" style="color:#f68b1e"></i> </a>

                                    }
                                   @* <a   asp-controller="Orders" asp-action="AddItemToShoppingCart" asp-route-id="@item.Id" onclick="return confirm('success Product Add in Cart ');">
                                        <i class="fas fa-cart-plus text-primary"></i> </a >

                                       <a asp-controller="Favorite" asp-action="AddItemToFavorite" asp-route-id="@item.Id">
                                            <i *ngIf="addToFavourit"
                                             class="fas fa-heart text-primary"
                                             (click)="removeItemFav(item)"></i>
                                        </a>*@
                                </div>      
                            }
                    
                    </div>
                </div>
            }

        </div>


       <partial name="_pager" model="@pager" />

        @*pagination

        @if (ViewBag.Page > 0)
        {
            <a style="float:left;" href="@Url.Action("Index", new { page = ViewBag.Page - 1 })" 
                class="btn btn-default">
                @localizer["Prev"]
            </a>
        }
        @if (ViewBag.Page < ViewBag.MaxPage)
        {
            <a style="float:right;" href="@Url.Action("Index", new { page = ViewBag.Page + 1 })" 
               class="btn btn-default">
                @localizer["Next"]
            </a>
        }
        *@
    </div>
</div>

@if (User.IsInRole("Admin"))
{
    @await Html.PartialAsync("CustomButton","Product")

}

@section Scripts{
    <script >
          $(document).ready(function (){
               $('.addItemInCard').on('click', function () {

                  var btn= $(this);
          
  
                    AddItemINCard(btn.data('id'));
            
               });
                $('.addItemInFav').on('click', function () {

                  var btn= $(this);
          
  
                    AddItemINFavourit(btn.data('id'));
            
               });
                   
          });

                     
    </script>

    @*filter by price*@
    
   @* <script>
        function showProducts(minPrice, maxPrice) {
            $("#products div").hide().filter(function() {
                var price = parseInt($(this).data("price"), 10);
                return price >= minPrice && price <= maxPrice;
            }).show();
        }

        slide: function(event, ui) {
            var min = ui.values[0],
                max = ui.values[1];

            $("#amount").val("$" + min + " - $" + max);
            showProducts(min, max);
        }

        var options = {
            range: true,
            min: 0,
            max: 50000,
            values: [ 50, 300 ]
        }, min, max;

        $("#slider-range").slider(options);

        min = $("#slider-range").slider("values", 0);
        max = $("#slider-range").slider("values", 1);

        $("#amount").val("$" + min + " - $" + max);

        showProducts(min, max);

        function showProducts(minPrice, maxPrice) {
            $("#products li").hide().filter(function() {
                var price = parseInt($(this).data("price"), 10);
                return price >= minPrice && price <= maxPrice;
            }).show();
        }

        $(function() {
            var options = {
                range: true,
                min: 0,
                max: 500,
                values: [50, 300],
                slide: function(event, ui) {
                    var min = ui.values[0],
                        max = ui.values[1];

                    $("#amount").val("$" + min + " - $" + max);
                    showProducts(min, max);
                }
            }, min, max;

            $("#slider-range").slider(options);

            min = $("#slider-range").slider("values", 0);
            max = $("#slider-range").slider("values", 1);

            $("#amount").val("$" + min + " - $" + max);

            showProducts(min, max);
        });​
    </script>*@

}
@model PagedList.IPagedList<Product>
@using PagedList.Mvc;
@using System.Web.Mvc;

@inject Microsoft.AspNetCore.Mvc.Localization.IViewLocalizer localizer;


@{
    ViewData["Title"] = @localizer["Product"] ;
}

<div class="row cont">
    <div class="col-sm-3">
        <div class="card ">
            <div class="card-body type_card">
                <h2 class="card-title">@localizer["ProductType"] </h2>
                <form  asp-action="FilterProducts" asp-controller="Product">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        <div class="form-group">
                            <label  class="control-label">Category :</label>
                            <select  name="CategoryId"  class="form-control" asp-items="ViewBag.Category"></select>
@*                                <span asp-validation-for="CategoryId" class="text-danger"></span>
*@                      </div>
                        <div class="form-group mt-2">
                            <label  class="control-label">Discount :</label>
                            <input type="checkbox" name="check" />
@*                          <span asp-validation-for="CategoryId" class="text-danger"></span>
*@                      </div>
                        <div class="form-group mt-4">
                            <input type="submit" value="Submit" class="btn btn-outline-success float-right" />
                            <a class="btn btn-outline-info" asp-action="Index">Defult</a>
                        </div>
                </form>
            </div>
        </div>
    </div>

    <div class="col-sm-9">
        <div class="row g-0">
            @foreach (var item in Model)
            {
                <div class="col-md-4">
                    <div class="card card-border-none resp-wrap-align-center">
                        <a asp-action="Details" asp-route-id="@item.Id">
                            <img src="@item.Image" class="card-img-top img-fluid rounded" style="height:300px" />
                        </a>

                        @if (item.Discount != 0)
                        {
                            <a asp-action="Details" asp-route-id="@item.Id">
                                <div class="card-img-overlay">
                                    <span class="mx-2 text-light p-1 bg-danger text-white">@localizer["Discount"] </span>
                                </div>
                            </a>
                        }

                        <div class="card-body">
                            <div class="overflow-hidden">
                                <h5 class="card-title fs-6 d-inline-block text-truncate font-monospace text-start text-primary">
                                    @item.Name
                                </h5>
                            </div>
                            <div class="styleprice">
                                <p class="card-text text-muted">@item.Price.ToString("c") </p>
                                @if (item.Discount != 0)
                                {
                                    <p class="card-text text-danger text-decoration-line-through">
                                        @item.Old_Price.ToString("c")
                                    </p>
                                }
                                else
                                {
                                    <p></p>
                                }
                            </div>
                        </div>

                        <div class="alert alert-dark stylealert">
                            <button style="border: none; background-color: #d3d3d4">
                                <i class="fas fa-cart-plus text-primary"></i>
                            </button>
                            <i class="fas fa-heart text-primary"></i>
                        </div>

                    </div>
                </div>
            }

        </div>
    </div>
</div>

@if (User.IsInRole("Admin"))
{
    @await Html.PartialAsync("CustomButton","Product")

}
@*
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@((IHtmlHelper)Html).PagedListPager(Model, page => Url.Action("Index", 
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))*@


